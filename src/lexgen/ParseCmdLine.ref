$INCLUDE "LibraryEx";


*$FROM GetOpt
$EXTERN GetOpt;


/**
  <ParseCommandLine (e.Option)*>
    == InPlace e.FileName
    == From (e.FromFileName) To (e.ToFileName)
*/
$ENTRY ParseCommandLine {
  e.Options
    = <GetOpt
        (
          (From Required 'f' ('from'))
          (To Required 'o' ('to'))
        )
        e.Options
      >
    : {
        () (FILE s.Pos e.FileName) =
          InPlace e.FileName;

        () e.Begin (From s.PosFrom e.From) e.End
          = e.Begin e.End
          : {
              (To s.PosTo e.To) =
                From (e.From) To (e.To);

              e.Other =
                <FormatError s.PosFrom 'expected argument --to'>
                <HelpOnError>;
            };

        () e.Begin (To s.Pos e.To) e.End =
          <FormatError s.Pos 'exptected argument --from'>
          <HelpOnError>;

        () e.AnyOther =
          <Prout 'Command line error: unrecognized command line'>
          <HelpOnError>;

        (e.Errors) e.AnyOther =
          <Map
            {
              (s.Pos NoRequiredParam e.Opt) =
                <FormatError s.Pos 'option ' e.Opt ' expects parameter'>;

              (s.Pos UnknownShortOption s.Option) =
                <FormatError s.Pos 'unknown option -' s.Option>;

              (s.Pos UnknownLongOption e.Option) =
                <FormatError s.Pos 'unknown option --' e.Option>;
            }
            e.Errors
          >
          <HelpOnError>;
      }
}


FormatError {
  s.Pos e.Message =
    <Prout 'Command line argument ' <Symb s.Pos> ': ' e.Message>;
}

HelpOnError {
  =
    <Prout 'Use:'>
    <Prout '    lexgen filename.sref - for rewritting file\n'>
    <Prout '    lexgen --from=file1.sref --to=file2.sref - for writting '
               'to other target\n'>
    <Prout '    --from, -f - source file'>
    <Prout '    --to, -o - target file'>
    <Exit 1>
}
