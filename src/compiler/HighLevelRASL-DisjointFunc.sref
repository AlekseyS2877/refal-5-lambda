//FROM LibraryEx
$EXTERN Map, Fetch, MapReduce, Max;

//FROM HighLevelRASL-Common
$EXTERN FoldOpenELoops, PutVariableDebugTable;

$ENTRY HighLevelRASL-Function-Disjoint {
  s.FnGenInitSubst s.FnGenSubst s.FnGenResult
  s.ScopeClass (e.Name) e.Sentences

    = <Map
        {
          ((e.Pattern) (e.Result))

            = <s.FnGenInitSubst (e.Name) e.Pattern>
            : s.ContextTop e.Substitutes (e.FirstPatternCommands)

            = <s.FnGenSubst
                s.ContextTop e.Substitutes (e.FirstPatternCommands)
              >
            : s.ContextOffset (e.PatternVars) (e.MarkedPattern)
              e.PatternCommands

            = <s.FnGenResult
                s.ContextOffset (e.PatternVars) (e.MarkedPattern) e.Result
              >
            : s.ContextCount e.ResultCommands

            = <FoldOpenELoops
                (#CmdIssueMemory s.ContextCount)
                e.PatternCommands
                <PutVariableDebugTable e.PatternVars>
                e.ResultCommands
              >
            : e.Commands

            = (e.Commands);
        }
        e.Sentences
      >
    : e.Sentences^ ((#CmdIssueMemory s.LastMemory) e.LastSentence)

    = <MapReduce
        {
          s.MaxMemory ((#CmdIssueMemory s.Memory) e.Sentence) =
            <Max s.MaxMemory s.Memory>
            (#CmdSentence e.Sentence);
        }
        s.LastMemory
        e.Sentences
      >
    : s.MaxMemory e.Sentences^

    = (#Function
        s.ScopeClass (e.Name)
        (#CmdIssueMemory s.MaxMemory)
        e.Sentences
        <Fetch
          e.LastSentence
          {
            e.Commands (#CmdOpenELoop e.OpenELoop) =
              e.Commands (#CmdOpenELoop e.OpenELoop) (#CmdFail);

            e.LastSentence^ = e.LastSentence;
          }
        >
      );
}
